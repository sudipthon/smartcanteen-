docker build . -t <image_name>
    docker build . -t <image_name>:<tag>
    docker build . -t <image_name>:<tag> -f <Dockerfile_name>
running image
    docker run <inageid>


docker-compose build
build using no cache
    docker-compose build --no-cache
docker-compose up


list images
    docker images / docker image ls

    list only id of images 
        docker images -q
    

removing image 
    docker rmi -f <image_id>

    remove all images at once
            docker rmi  -f $(docker images -q)


list containers
    docker ps -a
    docker container ls -a

remove conatiner
    docker rm -f <container_id>


listing dir inside contianer 
    docker run -it --rm <image_name> ls /app/

stoping container 
    docker-compose down


start docker
    sudo systemctl start docker

restart docker
    sudo systemctl restart docker


(deattached mode)to get different termaminal for rabbitmq,celery and django 
    docker-compose up -d
    docker-compose logs -f web   # for django
    docker-compose logs -f celery # for celery
    docker-compose logs -f rabbitmq  # for rabbitmq


to interact with image/os 
    docker run -it <image_id> /bin/bash or /bin/sh


port mapping 
    docker run -p <host_port>:<container_port> <image_id>  # 8000 is host port and 8000 is container port
    docker image ls
    docker run -p 8000:8000 image_id



To push your image, you should tag it with your Docker Hub username, like so:

docker tag <image_id> <username>/<repository>:<tag>
docker push yourusername/canteen:latest













# Building Docker Images
docker build . -t <image_name>
docker build . -t <image_name>:<tag>
docker build . -t <image_name>:<tag> -f <Dockerfile_name>

# Running Containers
docker run <image_id>
docker run -it <image_id> /bin/bash # or /bin/sh for interactive shell
docker run -p <host_port>:<container_port> <image_id> # Port mapping
docker run -it --rm <image_name> ls /app/ # Listing directory inside container

# Docker Compose Commands
docker-compose build
docker-compose build --no-cache # Build using no cache
docker-compose up
docker-compose down # Stopping container
docker-compose up -d # Detached mode
docker-compose logs -f web # Logs for Django
docker-compose logs -f celery # Logs for Celery
docker-compose logs -f rabbitmq # Logs for RabbitMQ

# Managing Docker Images
docker images # or docker image ls - List images
docker images -q # List only IDs of images
docker rmi -f <image_id> # Removing a specific image
docker rmi -f $(docker images -q) # Remove all images at once

# Managing Docker Containers
docker ps -a # or docker container ls -a - List containers
docker rm -f <container_id> # Remove container

# Docker System Commands
sudo systemctl start docker # Start Docker
sudo systemctl restart docker # Restart Docker

# Docker Hub Commands
docker tag <image_id> <username>/<repository>:<tag> # Tagging an image
docker push <username>/<repository>:<tag> # Pushing an image to Docker Hub